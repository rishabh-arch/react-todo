{"version":3,"sources":["App.js","index.js"],"names":["App","useState","color","backgroundColor","ThemeMode","SetThemeMode","localArray_S","localStorage","getItem","localArray_A","mode","Theme","setTheme","split","useEffect","inputList","setInputList","Items","setItems","className","style","checked","onChange","setItem","type","id","placeholder","event","target","value","onClick","previous_array","indexOf","z","localArray_to_S","toString","length","map","a","i","aria-hidden","newArr","filter","arrElem","index","deleteItem","listStyle","ReactDOM","render","document","getElementById"],"mappings":"wNAuGeA,EAnGH,WAAO,IAAD,EACkBC,mBAAS,CAACC,MAAM,QAAQC,gBAAgB,YAD1D,mBACTC,EADS,KACEC,EADF,KAGZC,EAAeC,aAAaC,QAAQ,OACpCC,EAAe,GACfC,EAAOH,aAAaC,QAAQ,QALhB,EAMUP,oBAAS,GANnB,mBAMTU,EANS,KAMFC,EANE,KAQK,OAAjBN,GAA0C,KAAjBA,IAC7BG,EAAeH,EAAaO,MAAM,MAClCC,qBAAU,WAERF,EADU,SAARF,KAMJ,CAACA,IAECI,qBAAU,WAENT,GADU,IAARM,EACW,CAACT,MAAM,QAAQC,gBAAgB,WAG/B,CAACD,MAAM,QAAQC,gBAAgB,cAG9C,CAACQ,IA3BW,MA6BoBV,mBAAS,IA7B7B,mBA6BPc,EA7BO,KA6BIC,EA7BJ,OA8BUf,mBAASQ,GA9BnB,mBA8BTQ,EA9BS,KA8BFC,EA9BE,KAgEhB,OACE,mCACE,qBAAKC,UAAU,WAAf,SACE,sBAAKC,MAAO,CAACjB,gBAAiBC,EAAUD,iBAAkBgB,UAAU,aAApE,UAEE,wBAAOA,UAAU,SAAjB,UACE,uBAAOE,QAASV,EAAOW,SAAU,WAAKV,GAAUD,GAAQJ,aAAagB,QAAQ,QAAQZ,IAASa,KAAK,aACjG,sBAAML,UAAU,oBAGlB,oBAAIC,MAAO,CAAClB,MAAOE,EAAUF,OAA7B,uBACA,uBACA,sBAAKuB,GAAG,MAAR,UACE,uBAAOD,KAAK,OAAOE,YAAY,eAAeJ,SA7CxC,SAACK,GACjBX,EAAaW,EAAMC,OAAOC,UA6ChB,wBAAQC,QA3CA,WAClBZ,GAAS,SAAAa,GACP,GAAkB,KAAdhB,IAA2D,IAAvCgB,EAAeC,QAAQjB,GAAmB,CAChE,IAAIkB,EAAC,sBAAOF,GAAP,CAAuBhB,IACxBmB,EAAkBD,EAAEE,WAExB,OADA5B,aAAagB,QAAQ,MAAOW,GACrBD,EAGP,GAAIF,EAAeK,OAAS,EAAG,CACzBF,EAAkB,YAAIH,GAAgBI,WAC1C5B,aAAagB,QAAQ,MAAOW,GAE9B,OAAO,YAAIH,OA8BL,kBAEF,6BACGd,EAAMoB,KAAI,SAACC,EAAGC,GAQb,OAPQ,sBAAKpB,UAAU,aAAf,UACN,mBAAGA,UAAU,QAAQqB,cAAY,OAAOV,QAAS,YA9B9C,SAACS,GAClBrB,GAAS,SAACa,GACR,IAAMU,EAASV,EAAeW,QAAO,SAACC,EAASC,GAC7C,OAAOA,IAAUL,KAEfL,EAAkBO,EAAON,WAE7B,OADA5B,aAAagB,QAAQ,MAAOW,GACrBO,KAwBOI,CAAWN,IADb,eAGA,oBAAInB,MAAO,CAAE0B,UAAW,QAAxB,SAAmCR,MAJIC,gBCjFzDQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.be693f7b.chunk.js","sourcesContent":["import './App.css';\nimport './toggle.css';\nimport React, { useState,useEffect } from 'react';\n\nconst App = () => {\n  const [ThemeMode, SetThemeMode] = useState({color:\"black\",backgroundColor:\"#ffffff\"});\n  \n  var localArray_S = localStorage.getItem(\"key\");\n  let localArray_A = [];\n  var mode = localStorage.getItem(\"mode\");\n  const [Theme, setTheme] = useState(false);\n  \n  if (localArray_S !== null && localArray_S !== \"\")\n  localArray_A = localArray_S.split(',');\n  useEffect(() => {\n  if (mode=== \"true\"){\n    setTheme(true);\n  }\n  else{\n    setTheme(false);\n  }\n},[mode])\n\n    useEffect(() => {\n      if (Theme===true){\n        SetThemeMode({color:\"white\",backgroundColor:\"#111010\"});\n      }\n      else{\n        SetThemeMode({color:\"black\",backgroundColor:\"#ffffff\"});\n      }\n    }\n    , [Theme])\n\n    const [inputList, setInputList] = useState(\"\");\n  const [Items, setItems] = useState(localArray_A);\n  // const [ThemeMode, SetThemeMode] = useState({color:\"white\",backgroundColor:\"#111010\"});\n  const itemEvent = (event) => {\n    setInputList(event.target.value);\n  };\n  const listOfItems = () => {\n    setItems(previous_array => {\n      if (inputList !== \"\" && previous_array.indexOf(inputList) === -1) {\n        var z = [...previous_array, inputList]\n        var localArray_to_S = z.toString();\n        localStorage.setItem(\"key\", localArray_to_S);\n        return z\n      }\n      else {\n        if (previous_array.length > 0) {\n          var localArray_to_S = [...previous_array].toString();\n          localStorage.setItem(\"key\", localArray_to_S);\n        }\n        return [...previous_array]\n      }\n    })\n  }\n\n  const deleteItem = (i) => {\n    setItems((previous_array) => {\n      const newArr = previous_array.filter((arrElem, index) => {\n        return index !== i;\n      })\n      var localArray_to_S = newArr.toString();\n      localStorage.setItem(\"key\", localArray_to_S);\n      return newArr\n    })\n  }\n\n  return (\n    <>\n      <div className=\"main_div\">\n        <div style={{backgroundColor: ThemeMode.backgroundColor}} className=\"center_div\">\n\n          <label className=\"switch\">\n            <input checked={Theme} onChange={()=>{setTheme(!Theme); localStorage.setItem(\"mode\",!Theme)}} type=\"checkbox\"/>\n              <span className=\"slider round\"></span>\n          </label>\n\n            <h1 style={{color: ThemeMode.color}}>ToDo List</h1>\n            <br />\n            <div id=\"inp\">\n              <input type=\"text\" placeholder=\"add an items\" onChange={itemEvent} />\n              <button onClick={listOfItems}>+</button>\n            </div>\n            <ol>\n              {Items.map((a, i) => {\n                var z = <div className=\"todo_style\" key={i}>\n                  <i className=\"cross\" aria-hidden=\"true\" onClick={() => {\n                    deleteItem(i)\n                  }}>X</i>\n                  <li style={{ listStyle: \"none\" }}>{a}</li>\n\n                </div>\n                return z;\n              })}\n            </ol>\n        </div>\n        </div>\n    </>\n  );\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}